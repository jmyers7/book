Traceback (most recent call last):
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

# import gaussian mixture model from scikit-learn
from sklearn.mixture import GaussianMixture

# import data and convert to numpy array
url = 'https://raw.githubusercontent.com/jmyers7/stats-book-materials/main/data/ch11-book-data-02.csv'
df = pd.read_csv(url)
x = df['x'].to_numpy().reshape(-1, 1)

# instantiate the model and fit it to the data
gmm = GaussianMixture(n_components=2, random_state=42)
gmm.fit(X=x)

# pull out the learned means and variances
means = gmm.means_
std = np.sqrt(gmm.covariances_)

# define gaussian random variables based on learned parameters
comp_0 = sp.stats.norm(loc=means[0][0], scale=std[0][0][0])
comp_1 = sp.stats.norm(loc=means[1][0], scale=std[1][0][0])

# plot the gaussian density curves
grid = np.linspace(-3, 13, num=300)
plt.plot(grid, comp_0.pdf(grid))
plt.plot(grid, comp_1.pdf(grid))

# plot the data with component labels
plt.hist(x=class_0, alpha=0.7, ec='black', bins=5, density=True, color=blue, label='class 0')
plt.hist(x=class_1, alpha=0.7, ec='black', bins=12, density=True, color=magenta, label='class 1')

plt.legend()
plt.xlabel('$x$')
plt.ylabel('density')
plt.tight_layout()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[8], line 27[0m
[1;32m     24[0m plt[38;5;241m.[39mplot(grid, comp_1[38;5;241m.[39mpdf(grid))
[1;32m     26[0m [38;5;66;03m# plot the data with component labels[39;00m
[0;32m---> 27[0m plt[38;5;241m.[39mhist(x[38;5;241m=[39m[43mclass_0[49m, alpha[38;5;241m=[39m[38;5;241m0.7[39m, ec[38;5;241m=[39m[38;5;124m'[39m[38;5;124mblack[39m[38;5;124m'[39m, bins[38;5;241m=[39m[38;5;241m5[39m, density[38;5;241m=[39m[38;5;28;01mTrue[39;00m, color[38;5;241m=[39mblue, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mclass 0[39m[38;5;124m'[39m)
[1;32m     28[0m plt[38;5;241m.[39mhist(x[38;5;241m=[39mclass_1, alpha[38;5;241m=[39m[38;5;241m0.7[39m, ec[38;5;241m=[39m[38;5;124m'[39m[38;5;124mblack[39m[38;5;124m'[39m, bins[38;5;241m=[39m[38;5;241m12[39m, density[38;5;241m=[39m[38;5;28;01mTrue[39;00m, color[38;5;241m=[39mmagenta, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mclass 1[39m[38;5;124m'[39m)
[1;32m     30[0m plt[38;5;241m.[39mlegend()

[0;31mNameError[0m: name 'class_0' is not defined


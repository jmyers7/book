Traceback (most recent call last):
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/johnmyers/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# mini-batch gradient descent parameters
init_parameters = {'theta': torch.tensor([1.5, 1.5])}
random_state = 42
gd_parameters = {'num_epochs': [1, 1, 1, 2],
               'lr': [1e-1, 1e-1, 1e-1, 1e-1],
               'batch_size': [2, 8, 32, 128],
               'max_steps': [60, 15, 12, 12]}
parameters_list = []
objectives_list = []

# run mini-batch gradient descent
for i in range(4):
    kwargs = {key: gd_parameters[key][i] for key in gd_parameters.keys()}
    running_parameters, running_objectives = SGD(init_parameters=init_parameters,
                             dataset=dataset,
                             J=J,
                             tracking='gd_step',
                             random_state=random_state,
                             shuffle=True,
                             **kwargs)
    parameters_list.append(running_parameters)
    objectives_list.append(running_objectives)

# plot the objective function
_, axes = plt.subplots(nrows=2, ncols=2, figsize=(12, 9), sharey=True)

for i in range(4):
    idx = axes_idx[i]
    objectives = objectives_list[i]
    kwargs = {key: gd_parameters[key][i] for key in gd_parameters.keys()}
    batch_size = kwargs['batch_size']
    lr = kwargs['lr']
    axes[idx].plot(range(len(objectives)), objectives)
    axes[idx].set_xlabel('gradient steps')
    axes[idx].set_ylabel('objective')
    axes[idx].set_title(f'mini-batch size$={batch_size}$, $\alpha={lr}$')

plt.tight_layout()
------------------

----- stdout -----
Error in callback <function _draw_all_if_interactive at 0x12af32c20> (for post_execute), with arguments args (),kwargs {}:
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/IPython/core/formatters.py:340[0m, in [0;36mBaseFormatter.__call__[0;34m(self, obj)[0m
[1;32m    338[0m     [38;5;28;01mpass[39;00m
[1;32m    339[0m [38;5;28;01melse[39;00m:
[0;32m--> 340[0m     [38;5;28;01mreturn[39;00m [43mprinter[49m[43m([49m[43mobj[49m[43m)[49m
[1;32m    341[0m [38;5;66;03m# Finally look for special method names[39;00m
[1;32m    342[0m method [38;5;241m=[39m get_real_method(obj, [38;5;28mself[39m[38;5;241m.[39mprint_method)

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/IPython/core/pylabtools.py:152[0m, in [0;36mprint_figure[0;34m(fig, fmt, bbox_inches, base64, **kwargs)[0m
[1;32m    149[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_bases[39;00m [38;5;28;01mimport[39;00m FigureCanvasBase
[1;32m    150[0m     FigureCanvasBase(fig)
[0;32m--> 152[0m [43mfig[49m[38;5;241;43m.[39;49m[43mcanvas[49m[38;5;241;43m.[39;49m[43mprint_figure[49m[43m([49m[43mbytes_io[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m
[1;32m    153[0m data [38;5;241m=[39m bytes_io[38;5;241m.[39mgetvalue()
[1;32m    154[0m [38;5;28;01mif[39;00m fmt [38;5;241m==[39m [38;5;124m'[39m[38;5;124msvg[39m[38;5;124m'[39m:

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/backend_bases.py:2164[0m, in [0;36mFigureCanvasBase.print_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2161[0m     [38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`[39;00m
[1;32m   2162[0m     [38;5;66;03m# so that we can inject the orientation[39;00m
[1;32m   2163[0m     [38;5;28;01mwith[39;00m [38;5;28mgetattr[39m(renderer, [38;5;124m"[39m[38;5;124m_draw_disabled[39m[38;5;124m"[39m, nullcontext)():
[0;32m-> 2164[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfigure[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   2165[0m [38;5;28;01mif[39;00m bbox_inches:
[1;32m   2166[0m     [38;5;28;01mif[39;00m bbox_inches [38;5;241m==[39m [38;5;124m"[39m[38;5;124mtight[39m[38;5;124m"[39m:

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/artist.py:95[0m, in [0;36m_finalize_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     93[0m [38;5;129m@wraps[39m(draw)
[1;32m     94[0m [38;5;28;01mdef[39;00m [38;5;21mdraw_wrapper[39m(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 95[0m     result [38;5;241m=[39m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     96[0m     [38;5;28;01mif[39;00m renderer[38;5;241m.[39m_rasterizing:
[1;32m     97[0m         renderer[38;5;241m.[39mstop_rasterizing()

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/figure.py:3154[0m, in [0;36mFigure.draw[0;34m(self, renderer)[0m
[1;32m   3151[0m         [38;5;66;03m# ValueError can occur when resizing a window.[39;00m
[1;32m   3153[0m [38;5;28mself[39m[38;5;241m.[39mpatch[38;5;241m.[39mdraw(renderer)
[0;32m-> 3154[0m [43mmimage[49m[38;5;241;43m.[39;49m[43m_draw_list_compositing_images[49m[43m([49m
[1;32m   3155[0m [43m    [49m[43mrenderer[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43martists[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msuppressComposite[49m[43m)[49m
[1;32m   3157[0m [38;5;28;01mfor[39;00m sfig [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39msubfigs:
[1;32m   3158[0m     sfig[38;5;241m.[39mdraw(renderer)

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         [43ma[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/axes/_base.py:3034[0m, in [0;36m_AxesBase.draw[0;34m(self, renderer)[0m
[1;32m   3031[0m     [38;5;28;01mfor[39;00m spine [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mspines[38;5;241m.[39mvalues():
[1;32m   3032[0m         artists[38;5;241m.[39mremove(spine)
[0;32m-> 3034[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_title_position[49m[43m([49m[43mrenderer[49m[43m)[49m
[1;32m   3036[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39maxison:
[1;32m   3037[0m     [38;5;28;01mfor[39;00m _axis [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_axis_map[38;5;241m.[39mvalues():

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/axes/_base.py:2988[0m, in [0;36m_AxesBase._update_title_position[0;34m(self, renderer)[0m
[1;32m   2986[0m     _log[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mtop of Axes not in the figure, so title not moved[39m[38;5;124m'[39m)
[1;32m   2987[0m     [38;5;28;01mreturn[39;00m
[0;32m-> 2988[0m [38;5;28;01mif[39;00m [43mtitle[49m[38;5;241;43m.[39;49m[43mget_window_extent[49m[43m([49m[43mrenderer[49m[43m)[49m[38;5;241m.[39mymin [38;5;241m<[39m top:
[1;32m   2989[0m     _, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mtransAxes[38;5;241m.[39minverted()[38;5;241m.[39mtransform(([38;5;241m0[39m, top))
[1;32m   2990[0m     title[38;5;241m.[39mset_position((x, y))

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/text.py:956[0m, in [0;36mText.get_window_extent[0;34m(self, renderer, dpi)[0m
[1;32m    951[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m(
[1;32m    952[0m         [38;5;124m"[39m[38;5;124mCannot get window extent of text w/o renderer. You likely [39m[38;5;124m"[39m
[1;32m    953[0m         [38;5;124m"[39m[38;5;124mwant to call [39m[38;5;124m'[39m[38;5;124mfigure.draw_without_rendering()[39m[38;5;124m'[39m[38;5;124m first.[39m[38;5;124m"[39m)
[1;32m    955[0m [38;5;28;01mwith[39;00m cbook[38;5;241m.[39m_setattr_cm([38;5;28mself[39m[38;5;241m.[39mfigure, dpi[38;5;241m=[39mdpi):
[0;32m--> 956[0m     bbox, info, descent [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_layout[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_renderer[49m[43m)[49m
[1;32m    957[0m     x, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_unitless_position()
[1;32m    958[0m     x, y [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_transform()[38;5;241m.[39mtransform((x, y))

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/text.py:381[0m, in [0;36mText._get_layout[0;34m(self, renderer)[0m
[1;32m    379[0m clean_line, ismath [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_preprocess_math(line)
[1;32m    380[0m [38;5;28;01mif[39;00m clean_line:
[0;32m--> 381[0m     w, h, d [38;5;241m=[39m [43m_get_text_metrics_with_cache[49m[43m([49m
[1;32m    382[0m [43m        [49m[43mrenderer[49m[43m,[49m[43m [49m[43mclean_line[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fontproperties[49m[43m,[49m
[1;32m    383[0m [43m        [49m[43mismath[49m[38;5;241;43m=[39;49m[43mismath[49m[43m,[49m[43m [49m[43mdpi[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfigure[49m[38;5;241;43m.[39;49m[43mdpi[49m[43m)[49m
[1;32m    384[0m [38;5;28;01melse[39;00m:
[1;32m    385[0m     w [38;5;241m=[39m h [38;5;241m=[39m d [38;5;241m=[39m [38;5;241m0[39m

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/text.py:69[0m, in [0;36m_get_text_metrics_with_cache[0;34m(renderer, text, fontprop, ismath, dpi)[0m
[1;32m     66[0m [38;5;250m[39m[38;5;124;03m"""Call ``renderer.get_text_width_height_descent``, caching the results."""[39;00m
[1;32m     67[0m [38;5;66;03m# Cached based on a copy of fontprop so that later in-place mutations of[39;00m
[1;32m     68[0m [38;5;66;03m# the passed-in argument do not mess up the cache.[39;00m
[0;32m---> 69[0m [38;5;28;01mreturn[39;00m [43m_get_text_metrics_with_cache_impl[49m[43m([49m
[1;32m     70[0m [43m    [49m[43mweakref[49m[38;5;241;43m.[39;49m[43mref[49m[43m([49m[43mrenderer[49m[43m)[49m[43m,[49m[43m [49m[43mtext[49m[43m,[49m[43m [49m[43mfontprop[49m[38;5;241;43m.[39;49m[43mcopy[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mismath[49m[43m,[49m[43m [49m[43mdpi[49m[43m)[49m

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/text.py:77[0m, in [0;36m_get_text_metrics_with_cache_impl[0;34m(renderer_ref, text, fontprop, ismath, dpi)[0m
[1;32m     73[0m [38;5;129m@functools[39m[38;5;241m.[39mlru_cache([38;5;241m4096[39m)
[1;32m     74[0m [38;5;28;01mdef[39;00m [38;5;21m_get_text_metrics_with_cache_impl[39m(
[1;32m     75[0m         renderer_ref, text, fontprop, ismath, dpi):
[1;32m     76[0m     [38;5;66;03m# dpi is unused, but participates in cache invalidation (via the renderer).[39;00m
[0;32m---> 77[0m     [38;5;28;01mreturn[39;00m [43mrenderer_ref[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mget_text_width_height_descent[49m[43m([49m[43mtext[49m[43m,[49m[43m [49m[43mfontprop[49m[43m,[49m[43m [49m[43mismath[49m[43m)[49m

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/backends/backend_svg.py:1287[0m, in [0;36mRendererSVG.get_text_width_height_descent[0;34m(self, s, prop, ismath)[0m
[1;32m   1285[0m [38;5;28;01mdef[39;00m [38;5;21mget_text_width_height_descent[39m([38;5;28mself[39m, s, prop, ismath):
[1;32m   1286[0m     [38;5;66;03m# docstring inherited[39;00m
[0;32m-> 1287[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_text2path[49m[38;5;241;43m.[39;49m[43mget_text_width_height_descent[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43mprop[49m[43m,[49m[43m [49m[43mismath[49m[43m)[49m

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/textpath.py:60[0m, in [0;36mTextToPath.get_text_width_height_descent[0;34m(self, s, prop, ismath)[0m
[1;32m     57[0m     prop [38;5;241m=[39m prop[38;5;241m.[39mcopy()
[1;32m     58[0m     prop[38;5;241m.[39mset_size([38;5;28mself[39m[38;5;241m.[39mFONT_SCALE)
[1;32m     59[0m     width, height, descent, [38;5;241m*[39m_ [38;5;241m=[39m \
[0;32m---> 60[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmathtext_parser[49m[38;5;241;43m.[39;49m[43mparse[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[38;5;241;43m72[39;49m[43m,[49m[43m [49m[43mprop[49m[43m)[49m
[1;32m     61[0m     [38;5;28;01mreturn[39;00m width [38;5;241m*[39m scale, height [38;5;241m*[39m scale, descent [38;5;241m*[39m scale
[1;32m     63[0m font [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_font(prop)

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/mathtext.py:79[0m, in [0;36mMathTextParser.parse[0;34m(self, s, dpi, prop, antialiased)[0m
[1;32m     77[0m prop [38;5;241m=[39m prop[38;5;241m.[39mcopy() [38;5;28;01mif[39;00m prop [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m
[1;32m     78[0m antialiased [38;5;241m=[39m mpl[38;5;241m.[39m_val_or_rc(antialiased, [38;5;124m'[39m[38;5;124mtext.antialiased[39m[38;5;124m'[39m)
[0;32m---> 79[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parse_cached[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43mdpi[49m[43m,[49m[43m [49m[43mprop[49m[43m,[49m[43m [49m[43mantialiased[49m[43m)[49m

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/mathtext.py:100[0m, in [0;36mMathTextParser._parse_cached[0;34m(self, s, dpi, prop, antialiased)[0m
[1;32m     97[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_parser [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:  [38;5;66;03m# Cache the parser globally.[39;00m
[1;32m     98[0m     [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m_parser [38;5;241m=[39m _mathtext[38;5;241m.[39mParser()
[0;32m--> 100[0m box [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_parser[49m[38;5;241;43m.[39;49m[43mparse[49m[43m([49m[43ms[49m[43m,[49m[43m [49m[43mfontset[49m[43m,[49m[43m [49m[43mfontsize[49m[43m,[49m[43m [49m[43mdpi[49m[43m)[49m
[1;32m    101[0m output [38;5;241m=[39m _mathtext[38;5;241m.[39mship(box)
[1;32m    102[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_output_type [38;5;241m==[39m [38;5;124m"[39m[38;5;124mvector[39m[38;5;124m"[39m:

File [0;32m~/miniconda3/envs/python-2023-12/lib/python3.10/site-packages/matplotlib/_mathtext.py:2165[0m, in [0;36mParser.parse[0;34m(self, s, fonts_object, fontsize, dpi)[0m
[1;32m   2162[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_expression[38;5;241m.[39mparseString(s)
[1;32m   2163[0m [38;5;28;01mexcept[39;00m ParseBaseException [38;5;28;01mas[39;00m err:
[1;32m   2164[0m     [38;5;66;03m# explain becomes a plain method on pyparsing 3 (err.explain(0)).[39;00m
[0;32m-> 2165[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m [38;5;241m+[39m ParseException[38;5;241m.[39mexplain(err, [38;5;241m0[39m)) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m
[1;32m   2166[0m [38;5;28mself[39m[38;5;241m.[39m_state_stack [38;5;241m=[39m []
[1;32m   2167[0m [38;5;28mself[39m[38;5;241m.[39m_in_subscript_or_superscript [38;5;241m=[39m [38;5;28;01mFalse[39;00m

[0;31mValueError[0m: 
mini-batch size$=2$, $lpha=0.1$
                     ^
ParseException: Expected end of text, found '$'  (at char 21), (line:1, col:22)

